# -*- mode: ruby -*-
# vi: set ft=ruby :

# If you do "vagrant up --provider=libvirt" after using virtualbox, you may 
# need to do "sudo ip addr flush vboxnetX" to remove the IP address linked 
# to a vboxnetX interface.
# If you do "vagrant up --provider=virtualbox" after libvirt, you may need 
# to do "sudo ip addr flush virbrX" to remove the IP address linked to a
# virbrX interface.

base_memory = ENV["VAGRANT_PYROLYSE_BASE_MEMORY"] || 1024
base_cpus = ENV["VAGRANT_PYROLYSE_BASE_CPU"] || 2

Vagrant.configure("2") do |config|
  config.vm.define "base" do |base|
    base.vm.box = "debian/testing64"
    base.vm.box_version = "20250126.1"
    
    base.vm.provider "virtualbox" do |v|
      v.memory = base_memory
      v.cpus = base_cpus
    end
    
    base.vm.network "private_network", name: "vboxnet2", ip: "192.168.56.14", :mac => "000000000014"
    base.vm.provision "shell", run: "always", inline: "ip -6 addr add fd0:0:0:56::14/64 dev eth1"
    base.vm.hostname = "base"
    
    base.vm.provider :virtualbox do |vb, override|
      # We deactivate guest because vboxsf is not working if we do not (Debian 10 Buster/virtualbox-6.1 from Oracle repository).
      override.vbguest.auto_update = false
    end
    
    base.vm.synced_folder ".", "/vagrant", disabled: true
    # This setups vboxsf when using VirtualBox.
    base.vm.synced_folder "../../..", "/home/vagrant/pyrolyse"
    # This replace the default rsync method by NFS when using libvirt.
    base.vm.provider :libvirt do |lv, override|
      override.vm.synced_folder "../../..", "/home/vagrant/pyrolyse", type: "nfs"
    end
    
    base.vm.provision "shell", inline: <<-SHELL
      apt update
      
      # IP experiments
      apt install tcpdump tcpreplay ethtool -y
      ethtool -K eth1 tso off gso off rxvlan off txvlan off ufo off gro off lro off tx off sg off rx off
      
      # TCP experiments
      apt install unzip python3-setuptools net-tools python3-scapy parallel jq -y

      echo "export PYROLYSE_PATH=/home/vagrant/pyrolyse" >> /home/vagrant/.bashrc
    SHELL

    base.vm.provision "shell", run: "always", inline: <<-SHELL
      # Next line is needed to block answer to UDP echo data when testing IP fragmentation.
      iptables -I OUTPUT -p icmp --icmp-type port-unreachable -j DROP
    SHELL
  end
  
  config.vm.define "target" do |target|
    target.vm.box = "pyrolyse/openbsd-6.1"
    
    target.vm.network "private_network", name: "vboxnet2", ip: "192.168.56.15", :mac => "000000000015"
    target.vm.hostname = "target"
    
    # We deactivate guest because we get this error: "E: Unable to locate package linux-headers-3.16.0-9-amd64".
    # target.vbguest.auto_update = false
    
    target.vm.synced_folder ".", "/vagrant", disabled: true # because there is a problem with rsync installation
    target.ssh.shell = "sh"
    target.vm.provision "shell", inline: <<-SHELL
      # IP experiments
      ifconfig em1 -tso
    
      # TCP experiments
      echo $SHELL
      touch /etc/inetd.conf
      echo -e "echo\tstream\ttcp\tnowait\troot\tinternal" >> /etc/inetd.conf
      grep echo /etc/inetd.conf


      echo 'inetd_enable=YES' >> /etc/rc.conf
      # sed -i -e 's/inetd_flags=NO/inetd_flags=YES/' /etc/rc.conf
      # sed -i -e 's/portmap_flags=NO/portmap_flags=YES/' /etc/rc.conf
      grep inetd /etc/rc.conf
      /etc/rc.d/inetd -f restart
    SHELL
  end
end

# Test commands (from base)
# IPv4: ping 192.168.56.15
# IPv6: ping fd00:0:0:56::15
# TCP: sudo hping3 -S 192.168.56.15 -p 7
# TCP: nc 192.168.56.15 (type "toto" and observe "toto" sent back)


